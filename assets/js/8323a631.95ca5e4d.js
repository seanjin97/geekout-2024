"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[328],{3170:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>t});var i=s(4848),d=s(8453);const l={sidebar_position:6},c="Installing Dependencies",o={id:"basics/install-dependencies",title:"Installing Dependencies",description:"Understanding Dependencies",source:"@site/docs/basics/install-dependencies.md",sourceDirName:"basics",slug:"/basics/install-dependencies",permalink:"/geekout-2024/docs/basics/install-dependencies",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/basics/install-dependencies.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Node.js Project Setup",permalink:"/geekout-2024/docs/basics/project-setup"},next:{title:"Hello, World!",permalink:"/geekout-2024/docs/basics/hello-world"}},r={},t=[{value:"Understanding Dependencies",id:"understanding-dependencies",level:2},{value:"Installing Dependencies",id:"installing-dependencies-1",level:2},{value:"Installing Development Dependencies",id:"installing-development-dependencies",level:2},{value:"(Extra) What is <code>package-lock.json</code> &amp; <code>node_modules</code>?",id:"extra-what-is-package-lockjson--node_modules",level:2},{value:"package-lock.json",id:"package-lockjson",level:3},{value:"Dependency Resolution",id:"dependency-resolution",level:4},{value:"Consistency",id:"consistency",level:4},{value:"Speed",id:"speed",level:4},{value:"Dependency Tree",id:"dependency-tree",level:4},{value:"node_modules",id:"node_modules",level:3},{value:"Local Storage for Packages",id:"local-storage-for-packages",level:4},{value:"Hierarchy of Dependencies",id:"hierarchy-of-dependencies",level:4},{value:"Access for Execution",id:"access-for-execution",level:4},{value:"Conclusion",id:"conclusion",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"installing-dependencies",children:"Installing Dependencies"}),"\n",(0,i.jsx)(n.h2,{id:"understanding-dependencies",children:"Understanding Dependencies"}),"\n",(0,i.jsx)(n.p,{children:"Dependencies are external packages or modules that your project relies on to function properly. They provide additional functionality and simplify the development process by reusing existing code."}),"\n",(0,i.jsx)(n.p,{children:"There are two types of dependencies in a Node.js project:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Production Dependencies"}),": These are the dependencies required for your application to run in a production environment. They are essential for your application to function properly."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Development Dependencies"}),": These are the dependencies used only during the development process. They include tools and utilities that assist in development, testing, and debugging."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Dependencies are listed in the ",(0,i.jsx)(n.code,{children:"package.json"})," file under the ",(0,i.jsx)(n.code,{children:'"dependencies"'})," and ",(0,i.jsx)(n.code,{children:'"devDependencies"'})," sections, respectively."]}),"\n",(0,i.jsx)(n.h2,{id:"installing-dependencies-1",children:"Installing Dependencies"}),"\n",(0,i.jsxs)(n.p,{children:["To install dependencies in your Node.js project, you can use the ",(0,i.jsx)(n.code,{children:"npm install"})," command followed by the package names. Let's install the necessary dependencies for our project."]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Open your terminal or command prompt in VSCode by pressing ",(0,i.jsx)(n.code,{children:"ctrl + ~"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Run the following command to install Express as a production dependency:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install express\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This command will download and install the latest version of Express and its dependencies. It will also update the ",(0,i.jsx)(n.code,{children:"package.json"})," file to include Express as a dependency."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"installing-development-dependencies",children:"Installing Development Dependencies"}),"\n",(0,i.jsxs)(n.p,{children:["In addition to production dependencies, you may also need development dependencies like reloading the server during development for your convenience. Let's install a development dependency called ",(0,i.jsx)(n.code,{children:"nodemon"}),", which automatically restarts the server whenever changes are made to the code."]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Run the following command to install ",(0,i.jsx)(n.code,{children:"nodemon"})," as a development dependency:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install --save-dev nodemon\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"--save-dev"})," flag ensures that ",(0,i.jsx)(n.code,{children:"nodemon"})," is added to the ",(0,i.jsx)(n.code,{children:'"devDependencies"'})," section of the ",(0,i.jsx)(n.code,{children:"package.json"})," file."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["You can install other development dependencies in a similar manner by specifying the ",(0,i.jsx)(n.code,{children:"--save-dev"})," flag."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"extra-what-is-package-lockjson--node_modules",children:["(Extra) What is ",(0,i.jsx)(n.code,{children:"package-lock.json"})," & ",(0,i.jsx)(n.code,{children:"node_modules"}),"?"]}),"\n",(0,i.jsxs)(n.p,{children:["After installing your dependencies, you'll observe that 2 new files (",(0,i.jsx)(n.code,{children:"package-lock.json"})," and ",(0,i.jsx)(n.code,{children:"node_modules"}),") were created."]}),"\n",(0,i.jsx)(n.h3,{id:"package-lockjson",children:"package-lock.json"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"package-lock.json"})," file is automatically generated when you run ",(0,i.jsx)(n.code,{children:"npm install"})," in a Node.js project. It serves several important purposes:"]}),"\n",(0,i.jsx)(n.h4,{id:"dependency-resolution",children:"Dependency Resolution"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Locks Versions"}),": Locks down the versions of each installed package and its dependencies, ensuring consistency across all environments."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Avoids Version Mismatch"}),": Prevents discrepancies and bugs from version mismatches by ensuring everyone uses the same package versions."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"consistency",children:"Consistency"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Same Dependencies"}),": Ensures that every developer or environment running the project will have the same dependencies installed, despite new package versions being available."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"speed",children:"Speed"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Faster Installs"}),": Improves installation speed by allowing npm to skip repeated metadata resolutions."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"dependency-tree",children:"Dependency Tree"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Detailed Tree Structure"}),": Provides a detailed tree structure of the node modules, including dependencies and their exact versions, ensuring that the exact structure is replicated every time."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"node_modules",children:"node_modules"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"node_modules"})," directory is where npm stores the packages it installs. This directory is crucial for the following reasons:"]}),"\n",(0,i.jsx)(n.h4,{id:"local-storage-for-packages",children:"Local Storage for Packages"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Stores Installed Packages"}),": When you install a package (e.g., ",(0,i.jsx)(n.code,{children:"npm install express"}),"), npm places it in the ",(0,i.jsx)(n.code,{children:"node_modules"})," directory, making it accessible to your application."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"hierarchy-of-dependencies",children:"Hierarchy of Dependencies"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Nested Structure"}),": The directory can have a nested structure with dependencies of dependencies stored in their own ",(0,i.jsx)(n.code,{children:"node_modules"})," subdirectories."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"access-for-execution",children:"Access for Execution"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Runtime Resolution"}),": Node.js resolves modules from this directory during runtime, essential for accessing external libraries and tools needed by the application."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsx)(n.p,{children:"Congratulations! You have successfully set up a new Node.js project and installed the necessary dependencies, including Express."}),"\n",(0,i.jsx)(n.p,{children:"Here's a summary of what you learned:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"What dependencies are and the difference between production and development dependencies."}),"\n",(0,i.jsxs)(n.li,{children:["How to install dependencies using ",(0,i.jsx)(n.code,{children:"npm install <package-name>"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["How to install development dependencies using ",(0,i.jsx)(n.code,{children:"npm install --save-dev <package-name>"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"With your project set up and dependencies installed, you're ready to start building your application using Express. In the next section, we'll dive into creating the Todo List API."})]})}function p(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>o});var i=s(6540);const d={},l=i.createContext(d);function c(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:c(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);