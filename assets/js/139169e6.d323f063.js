"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1055],{8530:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var o=t(4848),i=t(8453);const r={sidebar_position:5},c="Frontend",s={id:"frontend/index",title:"Frontend",description:"What You Will Be Learning",source:"@site/docs/frontend/index.md",sourceDirName:"frontend",slug:"/frontend/",permalink:"/geekout-2024/docs/frontend/",draft:!1,unlisted:!1,editUrl:"https://github.com/seanjin97/geekout-2024/tree/master/docs/docs/frontend/index.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"API Documentation",permalink:"/geekout-2024/docs/advanced/document-it"},next:{title:"1.1 Components",permalink:"/geekout-2024/docs/frontend/checkpoint1"}},a={},d=[{value:"What You Will Be Learning",id:"what-you-will-be-learning",level:2},{value:"Setup/Git Instructions",id:"setupgit-instructions",level:2},{value:"Learning Outcomes",id:"learning-outcomes",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"frontend",children:"Frontend"}),"\n",(0,o.jsx)(n.h2,{id:"what-you-will-be-learning",children:"What You Will Be Learning"}),"\n",(0,o.jsx)(n.p,{children:"In this React workshop, you will be learning how to build a simple Todo App frontend which performs CRUD (Create, Read, Update, Delete) operations on todo items."}),"\n",(0,o.jsx)(n.h2,{id:"setupgit-instructions",children:"Setup/Git Instructions"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"We will be providing you with the Github link to clone our repository. Alternatively, you can also download the repository and unzip it from discord."}),"\n",(0,o.jsxs)(n.li,{children:["We will be guiding you through the code via step-by-step exercises. Make sure you have git installed in your machine. At each stage of the code, you can check out by running ",(0,o.jsx)(n.code,{children:"git checkout {checkpoint branch name}"}),". For example, before exercise two, run ",(0,o.jsx)(n.code,{children:"git checkout checkpoint2"})," (for checkpoint 2)."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"This is called checking out a branch. To save your code within a branch, run:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'git add .\ngit commit -m "add changes"\n'})}),"\n",(0,o.jsxs)(n.p,{children:["The first command allows you to choose the files you want to commit to the branch. ",(0,o.jsx)(n.code,{children:"."}),' just means you are commiting all files. The second command commits the changes to the branch with a message "add changes". You can write any message for your commit.']}),"\n",(0,o.jsx)(n.p,{children:"After you committed your code in that branch you can proceed to checkout another branch."}),"\n",(0,o.jsx)(n.h2,{id:"learning-outcomes",children:"Learning Outcomes"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Basic React, components, props"}),"\n",(0,o.jsx)(n.li,{children:"Making API requests to the backend"}),"\n",(0,o.jsx)(n.li,{children:"UseState and useEffect hooks"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>s});var o=t(6540);const i={},r=o.createContext(i);function c(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);