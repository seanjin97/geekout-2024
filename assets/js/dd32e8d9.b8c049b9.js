"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4298],{9503:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var t=o(4848),s=o(8453);const a={sidebar_position:1},r="1.1 Components",i={id:"frontend/checkpoint1",title:"1.1 Components",description:'In ReactJS, a web application is like a puzzle made up of many pieces, and each piece is called a "component". These components can be as simple as a button or as complex as an entire section of a webpage. Each component is a reusable piece of the user interface.',source:"@site/docs/frontend/checkpoint1.md",sourceDirName:"frontend",slug:"/frontend/checkpoint1",permalink:"/geekout-2024/docs/frontend/checkpoint1",draft:!1,unlisted:!1,editUrl:"https://github.com/seanjin97/geekout-2024/tree/master/docs/docs/frontend/checkpoint1.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Frontend",permalink:"/geekout-2024/docs/frontend/"},next:{title:"1.2 API",permalink:"/geekout-2024/docs/frontend/checkpoint2"}},c={},d=[{value:"Exercise 1A",id:"exercise-1a",level:3},{value:"Exercise 1B",id:"exercise-1b",level:3}];function p(e){const n={code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"11-components",children:"1.1 Components"}),"\n",(0,t.jsx)(n.p,{children:'In ReactJS, a web application is like a puzzle made up of many pieces, and each piece is called a "component". These components can be as simple as a button or as complex as an entire section of a webpage. Each component is a reusable piece of the user interface.'}),"\n",(0,t.jsx)(n.p,{children:'To illustrate this, let\'s look at an example. Suppose we have a parent component that passes data to a child component. In React, this data is passed using "props", which stands for "properties". Props allow one component to send data to another, enabling components to communicate with each other.'}),"\n",(0,t.jsx)(n.p,{children:"Here's an example demonstrating how to pass props from a parent component to a child component:"}),"\n",(0,t.jsx)(n.p,{children:"Parent component"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'const ParentComponent = () => {\n  const greeting = "Hello";\n  const name = "Alice";\n\n  return (\n    <div>\n      <h1>Parent Component</h1>\n      <ChildComponent greeting={greeting} name={name} />\n    </div>\n  );\n};\n'})}),"\n",(0,t.jsx)(n.p,{children:"Child component"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"const ChildComponent = (props: { greeting, name }) => {\n  return (\n    <div>\n      <h2>Child Component</h2>\n      <p>{props.greeting}, {props.name}!</p>\n    </div>\n  );\n};\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In the ",(0,t.jsx)(n.code,{children:"ChildComponent"}),", we receive the props as an argument (here, named ",(0,t.jsx)(n.code,{children:"props"}),"). We can then access the ",(0,t.jsx)(n.code,{children:"greeting"})," and ",(0,t.jsx)(n.code,{children:"name"})," props using ",(0,t.jsx)(n.code,{children:"props.greeting"})," and ",(0,t.jsx)(n.code,{children:"props.name"})," and use them within the component\u2019s JSX."]}),"\n",(0,t.jsxs)(n.p,{children:["When rendered, the ",(0,t.jsx)(n.code,{children:"ParentComponent"})," will display its own heading, and the ",(0,t.jsx)(n.code,{children:"ChildComponent"})," will use the props passed to it to display a personalised greeting."]}),"\n",(0,t.jsx)(n.p,{children:"Breaking up our webpage into components in React makes it easier to build and manage complex UIs by breaking them down into smaller, reusable pieces."}),"\n",(0,t.jsx)(n.h3,{id:"exercise-1a",children:"Exercise 1A"}),"\n",(0,t.jsx)(n.p,{children:"In our application, identify which are the parent component(s) and which are the child component(s) and what props are being passed from component to component."}),"\n",(0,t.jsxs)(n.p,{children:["Hint: What are ",(0,t.jsx)(n.code,{children:"Todo"})," and ",(0,t.jsx)(n.code,{children:"TodoItem"}),"? Also use the browser developer tools to understand the structure of the site further."]}),"\n",(0,t.jsx)(n.h3,{id:"exercise-1b",children:"Exercise 1B"}),"\n",(0,t.jsx)(n.p,{children:"Let's try to refactor the existing code and create a new component for the header of the todo app. In other words, we want to take the following portion"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"<div className=\"todo-box\">\n    <div className=\"todo-div\">\n        <h1 style={{ padding: '10px 0px' }}>{formatDate(today)}</h1>\n        <h2 style={{ paddingBottom: '5px' }}>\n            Hey there! What's the plan for today?\n        </h2>\n    </div>\n</div>\n"})}),"\n",(0,t.jsxs)(n.p,{children:["and replace it with this, and create a new component in a file ",(0,t.jsx)(n.code,{children:"components/TodoHeader.jsx"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"<TodoHeader />\n"})}),"\n",(0,t.jsx)(n.p,{children:'After you\'ve done that, try to convert the header text "Hey there! ..." to a prop and modify it from outside your new component.'})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>i});var t=o(6540);const s={},a=t.createContext(s);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);